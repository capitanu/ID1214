<org.simbrain.network.core.Network>
  <neuronList/>
  <synapseList class="linked-hash-set"/>
  <groupList>
    <org.simbrain.network.subnetworks.BackpropNetwork>
      <parentNetwork reference="../../.."/>
      <id>Group_1</id>
      <label>Backprop</label>
      <stateInfo></stateInfo>
      <markedForDeletion>false</markedForDeletion>
      <neuronGroupList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
        <java.util.concurrent.CopyOnWriteArrayList>
          <default/>
          <int>3</int>
          <org.simbrain.network.groups.NeuronGroup>
            <parentNetwork reference="../../../../../.."/>
            <id>Group_2</id>
            <label>Layer 1</label>
            <stateInfo></stateInfo>
            <markedForDeletion>false</markedForDeletion>
            <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../.."/>
            <updateRule>Linear</updateRule>
            <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
            <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
              <java.util.concurrent.CopyOnWriteArrayList>
                <default/>
                <int>5</int>
                <org.simbrain.network.core.Neuron>
                  <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                    <inputType>WEIGHTED</inputType>
                    <increment>0.1</increment>
                    <slope>1.0</slope>
                    <bias>0.0</bias>
                    <noiseGenerator>
                      <pdf>UNIFORM</pdf>
                      <param1>0.0</param1>
                      <param2>1.0</param2>
                      <upperBound>1.0</upperBound>
                      <lowerBound>0.0</lowerBound>
                      <clipping>false</clipping>
                    </noiseGenerator>
                    <addNoise>false</addNoise>
                    <clipping>true</clipping>
                    <upperBound>1.0</upperBound>
                    <lowerBound>-1.0</lowerBound>
                  </updateRule>
                  <id>Neuron_1</id>
                  <label></label>
                  <activation>0.06</activation>
                  <spike>false</spike>
                  <buffer>0.0</buffer>
                  <spkBuffer>false</spkBuffer>
                  <inputValue>0.0</inputValue>
                  <parent reference="../../../../../../../../.."/>
                  <x>-231.0872343065072</x>
                  <y>-440.16377240720294</y>
                  <z>0.0</z>
                  <clamped>true</clamped>
                  <polarity>BOTH</polarity>
                  <targetValue>0.0</targetValue>
                  <lastActivation>0.16</lastActivation>
                  <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                  <updatePriority>0</updatePriority>
                  <auxValue>0.0</auxValue>
                </org.simbrain.network.core.Neuron>
                <org.simbrain.network.core.Neuron>
                  <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                    <inputType>WEIGHTED</inputType>
                    <increment>0.1</increment>
                    <slope>1.0</slope>
                    <bias>0.0</bias>
                    <noiseGenerator>
                      <pdf>UNIFORM</pdf>
                      <param1>0.0</param1>
                      <param2>1.0</param2>
                      <upperBound>1.0</upperBound>
                      <lowerBound>0.0</lowerBound>
                      <clipping>false</clipping>
                    </noiseGenerator>
                    <addNoise>false</addNoise>
                    <clipping>true</clipping>
                    <upperBound>1.0</upperBound>
                    <lowerBound>-1.0</lowerBound>
                  </updateRule>
                  <id>Neuron_2</id>
                  <label></label>
                  <activation>0.1</activation>
                  <spike>false</spike>
                  <buffer>0.0</buffer>
                  <spkBuffer>false</spkBuffer>
                  <inputValue>0.0</inputValue>
                  <parent reference="../../../../../../../../.."/>
                  <x>-231.0872343065072</x>
                  <y>-400.1637724072029</y>
                  <z>0.0</z>
                  <clamped>true</clamped>
                  <polarity>BOTH</polarity>
                  <targetValue>0.0</targetValue>
                  <lastActivation>0.16</lastActivation>
                  <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                  <updatePriority>0</updatePriority>
                  <auxValue>0.0</auxValue>
                </org.simbrain.network.core.Neuron>
                <org.simbrain.network.core.Neuron>
                  <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                    <inputType>WEIGHTED</inputType>
                    <increment>0.1</increment>
                    <slope>1.0</slope>
                    <bias>0.0</bias>
                    <noiseGenerator>
                      <pdf>UNIFORM</pdf>
                      <param1>0.0</param1>
                      <param2>1.0</param2>
                      <upperBound>1.0</upperBound>
                      <lowerBound>0.0</lowerBound>
                      <clipping>false</clipping>
                    </noiseGenerator>
                    <addNoise>false</addNoise>
                    <clipping>true</clipping>
                    <upperBound>1.0</upperBound>
                    <lowerBound>-1.0</lowerBound>
                  </updateRule>
                  <id>Neuron_3</id>
                  <label></label>
                  <activation>0.32</activation>
                  <spike>false</spike>
                  <buffer>0.0</buffer>
                  <spkBuffer>false</spkBuffer>
                  <inputValue>0.0</inputValue>
                  <parent reference="../../../../../../../../.."/>
                  <x>-231.0872343065072</x>
                  <y>-360.1637724072029</y>
                  <z>0.0</z>
                  <clamped>true</clamped>
                  <polarity>BOTH</polarity>
                  <targetValue>0.0</targetValue>
                  <lastActivation>0.16</lastActivation>
                  <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                  <updatePriority>0</updatePriority>
                  <auxValue>0.0</auxValue>
                </org.simbrain.network.core.Neuron>
                <org.simbrain.network.core.Neuron>
                  <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                    <inputType>WEIGHTED</inputType>
                    <increment>0.1</increment>
                    <slope>1.0</slope>
                    <bias>0.0</bias>
                    <noiseGenerator>
                      <pdf>UNIFORM</pdf>
                      <param1>0.0</param1>
                      <param2>1.0</param2>
                      <upperBound>1.0</upperBound>
                      <lowerBound>0.0</lowerBound>
                      <clipping>false</clipping>
                    </noiseGenerator>
                    <addNoise>false</addNoise>
                    <clipping>true</clipping>
                    <upperBound>1.0</upperBound>
                    <lowerBound>-1.0</lowerBound>
                  </updateRule>
                  <id>Neuron_4</id>
                  <label></label>
                  <activation>0.75</activation>
                  <spike>false</spike>
                  <buffer>0.0</buffer>
                  <spkBuffer>false</spkBuffer>
                  <inputValue>0.0</inputValue>
                  <parent reference="../../../../../../../../.."/>
                  <x>-231.0872343065072</x>
                  <y>-320.16377240720294</y>
                  <z>0.0</z>
                  <clamped>true</clamped>
                  <polarity>BOTH</polarity>
                  <targetValue>0.0</targetValue>
                  <lastActivation>0.65</lastActivation>
                  <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                  <updatePriority>0</updatePriority>
                  <auxValue>0.0</auxValue>
                </org.simbrain.network.core.Neuron>
                <org.simbrain.network.core.Neuron>
                  <updateRule class="org.simbrain.network.neuron_update_rules.LinearRule">
                    <inputType>WEIGHTED</inputType>
                    <increment>0.1</increment>
                    <slope>1.0</slope>
                    <bias>0.0</bias>
                    <noiseGenerator>
                      <pdf>UNIFORM</pdf>
                      <param1>0.0</param1>
                      <param2>1.0</param2>
                      <upperBound>1.0</upperBound>
                      <lowerBound>0.0</lowerBound>
                      <clipping>false</clipping>
                    </noiseGenerator>
                    <addNoise>false</addNoise>
                    <clipping>true</clipping>
                    <upperBound>1.0</upperBound>
                    <lowerBound>-1.0</lowerBound>
                  </updateRule>
                  <id>Neuron_5</id>
                  <label></label>
                  <activation>1.0</activation>
                  <spike>false</spike>
                  <buffer>0.0</buffer>
                  <spkBuffer>false</spkBuffer>
                  <inputValue>0.0</inputValue>
                  <parent reference="../../../../../../../../.."/>
                  <x>-231.0872343065072</x>
                  <y>-280.1637724072029</y>
                  <z>0.0</z>
                  <clamped>true</clamped>
                  <polarity>BOTH</polarity>
                  <targetValue>0.0</targetValue>
                  <lastActivation>0.512</lastActivation>
                  <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                  <updatePriority>0</updatePriority>
                  <auxValue>0.0</auxValue>
                </org.simbrain.network.core.Neuron>
              </java.util.concurrent.CopyOnWriteArrayList>
            </neuronList>
            <layout class="org.simbrain.network.layouts.LineLayout">
              <orientation>HORIZONTAL</orientation>
              <spacing>50.0</spacing>
              <initialX>0.0</initialX>
              <initialY>0.0</initialY>
            </layout>
            <incomingSgs/>
            <outgoingSgs>
              <org.simbrain.network.groups.SynapseGroup>
                <parentNetwork reference="../../../../../../../.."/>
                <id>Group_5</id>
                <label>1 → 2</label>
                <stateInfo></stateInfo>
                <markedForDeletion>false</markedForDeletion>
                <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../.."/>
                <sourceNeuronGroup reference="../../.."/>
                <targetNeuronGroup>
                  <parentNetwork reference="../../../../../../../../.."/>
                  <id>Group_3</id>
                  <label>Layer 2</label>
                  <stateInfo></stateInfo>
                  <markedForDeletion>false</markedForDeletion>
                  <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../../.."/>
                  <updateRule>Sigmoidal (Discrete)</updateRule>
                  <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
                  <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
                    <java.util.concurrent.CopyOnWriteArrayList>
                      <default/>
                      <int>5</int>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.5192581380439473</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_6</id>
                        <label></label>
                        <activation>0.008291939839927001</activation>
                        <spike>false</spike>
                        <buffer>0.008291939839927001</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>-93.24184445411885</x>
                        <y>-442.421079706806</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <lastActivation>0.06350534349180235</lastActivation>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.9355381244896753</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_7</id>
                        <label></label>
                        <activation>0.018274940790056808</activation>
                        <spike>false</spike>
                        <buffer>0.018274940790056808</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>-93.24184445411885</x>
                        <y>-402.421079706806</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <lastActivation>0.1295913906104376</lastActivation>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.9947685618164143</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_8</id>
                        <label></label>
                        <activation>0.023301183741503678</activation>
                        <spike>false</spike>
                        <buffer>0.023301183741503678</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>-93.24184445411885</x>
                        <y>-362.421079706806</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <lastActivation>0.14199888846055655</lastActivation>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>1.1849777578291334</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_9</id>
                        <label></label>
                        <activation>0.14713008086069207</activation>
                        <spike>false</spike>
                        <buffer>0.14713008086069207</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>-93.24184445411885</x>
                        <y>-322.42107970680604</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <lastActivation>0.28243340774383324</lastActivation>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                      <org.simbrain.network.core.Neuron>
                        <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                          <inputType>WEIGHTED</inputType>
                          <increment>0.1</increment>
                          <sFunction>LOGISTIC</sFunction>
                          <bias>0.5013362593151464</bias>
                          <slope>1.0</slope>
                          <noiseGenerator>
                            <pdf>UNIFORM</pdf>
                            <param1>0.0</param1>
                            <param2>1.0</param2>
                            <upperBound>1.0</upperBound>
                            <lowerBound>0.0</lowerBound>
                            <clipping>false</clipping>
                          </noiseGenerator>
                          <addNoise>false</addNoise>
                          <upperBound>1.0</upperBound>
                          <lowerBound>0.0</lowerBound>
                        </updateRule>
                        <id>Neuron_10</id>
                        <label></label>
                        <activation>0.01056938994462439</activation>
                        <spike>false</spike>
                        <buffer>0.01056938994462439</buffer>
                        <spkBuffer>false</spkBuffer>
                        <inputValue>0.0</inputValue>
                        <parent reference="../../../../../../../../../../../.."/>
                        <x>-93.24184445411885</x>
                        <y>-282.4210797068061</y>
                        <z>0.0</z>
                        <clamped>false</clamped>
                        <polarity>BOTH</polarity>
                        <targetValue>0.0</targetValue>
                        <lastActivation>0.06619137309231289</lastActivation>
                        <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                        <updatePriority>1</updatePriority>
                        <auxValue>0.0</auxValue>
                      </org.simbrain.network.core.Neuron>
                    </java.util.concurrent.CopyOnWriteArrayList>
                  </neuronList>
                  <layout class="org.simbrain.network.layouts.LineLayout">
                    <orientation>HORIZONTAL</orientation>
                    <spacing>50.0</spacing>
                    <initialX>0.0</initialX>
                    <initialY>0.0</initialY>
                  </layout>
                  <incomingSgs>
                    <org.simbrain.network.groups.SynapseGroup reference="../../.."/>
                  </incomingSgs>
                  <outgoingSgs>
                    <org.simbrain.network.groups.SynapseGroup>
                      <parentNetwork reference="../../../../../../../../../../.."/>
                      <id>Group_6</id>
                      <label>2 → 3</label>
                      <stateInfo></stateInfo>
                      <markedForDeletion>false</markedForDeletion>
                      <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../../../../.."/>
                      <sourceNeuronGroup reference="../../.."/>
                      <targetNeuronGroup>
                        <parentNetwork reference="../../../../../../../../../../../.."/>
                        <id>Group_4</id>
                        <label>Layer 3</label>
                        <stateInfo></stateInfo>
                        <markedForDeletion>false</markedForDeletion>
                        <parentGroup class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../../../../../../.."/>
                        <updateRule>Sigmoidal (Discrete)</updateRule>
                        <isSpikingNeuronGroup>false</isSpikingNeuronGroup>
                        <neuronList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
                          <java.util.concurrent.CopyOnWriteArrayList>
                            <default/>
                            <int>2</int>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>4.974218418816301</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_11</id>
                              <label></label>
                              <activation>0.9742064774831075</activation>
                              <spike>false</spike>
                              <buffer>0.9742064774831075</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>34.12061128749645</x>
                              <y>-387.8690058202314</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <lastActivation>0.6976567423048885</lastActivation>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                            <org.simbrain.network.core.Neuron>
                              <updateRule class="org.simbrain.network.neuron_update_rules.SigmoidalRule">
                                <inputType>WEIGHTED</inputType>
                                <increment>0.1</increment>
                                <sFunction>LOGISTIC</sFunction>
                                <bias>0.043383790717707794</bias>
                                <slope>1.0</slope>
                                <noiseGenerator>
                                  <pdf>UNIFORM</pdf>
                                  <param1>0.0</param1>
                                  <param2>1.0</param2>
                                  <upperBound>1.0</upperBound>
                                  <lowerBound>0.0</lowerBound>
                                  <clipping>false</clipping>
                                </noiseGenerator>
                                <addNoise>false</addNoise>
                                <upperBound>1.0</upperBound>
                                <lowerBound>0.0</lowerBound>
                              </updateRule>
                              <id>Neuron_12</id>
                              <label></label>
                              <activation>0.5787973751772882</activation>
                              <spike>false</spike>
                              <buffer>0.5787973751772882</buffer>
                              <spkBuffer>false</spkBuffer>
                              <inputValue>0.0</inputValue>
                              <parent reference="../../../../../../../../../../../../../../.."/>
                              <x>34.12061128749645</x>
                              <y>-347.8690058202314</y>
                              <z>0.0</z>
                              <clamped>false</clamped>
                              <polarity>BOTH</polarity>
                              <targetValue>0.0</targetValue>
                              <lastActivation>0.48066705470426985</lastActivation>
                              <parentGroup class="org.simbrain.network.groups.NeuronGroup" reference="../../../.."/>
                              <updatePriority>2</updatePriority>
                              <auxValue>0.0</auxValue>
                            </org.simbrain.network.core.Neuron>
                          </java.util.concurrent.CopyOnWriteArrayList>
                        </neuronList>
                        <layout class="org.simbrain.network.layouts.LineLayout">
                          <orientation>HORIZONTAL</orientation>
                          <spacing>50.0</spacing>
                          <initialX>0.0</initialX>
                          <initialY>0.0</initialY>
                        </layout>
                        <incomingSgs>
                          <org.simbrain.network.groups.SynapseGroup reference="../../.."/>
                        </incomingSgs>
                        <outgoingSgs/>
                        <gridThreshold>10</gridThreshold>
                        <betweenNeuronInterval>50</betweenNeuronInterval>
                        <recordAsSpikes>false</recordAsSpikes>
                        <recording>false</recording>
                        <inputMode>false</inputMode>
                        <inputIndex>0</inputIndex>
                        <writeCounter>0</writeCounter>
                        <subsamplingIndices>
                          <int>1</int>
                          <int>0</int>
                        </subsamplingIndices>
                        <fileNum>0</fileNum>
                      </targetNeuronGroup>
                      <connectionManager class="org.simbrain.network.connections.AllToAll"/>
                      <excitatoryRatio>0.1</excitatoryRatio>
                      <excitatoryPrototype>
                        <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                          <clipped>false</clipped>
                        </learningRule>
                        <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay">
                          <value>0.0</value>
                          <jumpHeight>1.0</jumpHeight>
                          <baseLine>0.0</baseLine>
                          <timeConstant>3.0</timeConstant>
                        </spikeResponder>
                        <id></id>
                        <strength>0.0</strength>
                        <psr>0.0</psr>
                        <increment>1.0</increment>
                        <upperBound>10.0</upperBound>
                        <lowerBound>-10.0</lowerBound>
                        <delay>0</delay>
                        <enabled>true</enabled>
                        <frozen>false</frozen>
                        <dlyPtr>0</dlyPtr>
                        <dlyVal>0.0</dlyVal>
                        <isTemplate>true</isTemplate>
                      </excitatoryPrototype>
                      <inhibitoryPrototype>
                        <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                          <clipped>false</clipped>
                        </learningRule>
                        <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay" reference="../../excitatoryPrototype/spikeResponder"/>
                        <id></id>
                        <strength>0.0</strength>
                        <psr>0.0</psr>
                        <increment>1.0</increment>
                        <upperBound>10.0</upperBound>
                        <lowerBound>-10.0</lowerBound>
                        <delay>0</delay>
                        <enabled>true</enabled>
                        <frozen>false</frozen>
                        <dlyPtr>0</dlyPtr>
                        <dlyVal>0.0</dlyVal>
                        <isTemplate>true</isTemplate>
                      </inhibitoryPrototype>
                      <displaySynapses>true</displaySynapses>
                      <recurrent>false</recurrent>
                      <inStatic>true</inStatic>
                      <exStatic>false</exStatic>
                      <useGroupLevelSettings>true</useGroupLevelSettings>
                      <compressedMatrixRep>AAAACgAB/////wAB/////wAB/////wAB/////wABwIVAvcAWamHAt/IRwDG4XsDKtjXABmdawNsu
LEAh++vAjS65v8VMTg==</compressedMatrixRep>
                      <useFullRepOnSave>false</useFullRepOnSave>
                    </org.simbrain.network.groups.SynapseGroup>
                  </outgoingSgs>
                  <gridThreshold>10</gridThreshold>
                  <betweenNeuronInterval>50</betweenNeuronInterval>
                  <recordAsSpikes>false</recordAsSpikes>
                  <recording>false</recording>
                  <inputMode>false</inputMode>
                  <inputIndex>0</inputIndex>
                  <writeCounter>0</writeCounter>
                  <subsamplingIndices>
                    <int>1</int>
                    <int>2</int>
                    <int>0</int>
                    <int>4</int>
                    <int>3</int>
                  </subsamplingIndices>
                  <fileNum>0</fileNum>
                </targetNeuronGroup>
                <connectionManager class="org.simbrain.network.connections.AllToAll"/>
                <excitatoryRatio>0.0</excitatoryRatio>
                <excitatoryPrototype>
                  <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                    <clipped>false</clipped>
                  </learningRule>
                  <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay" reference="../../targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/excitatoryPrototype/spikeResponder"/>
                  <id></id>
                  <strength>0.0</strength>
                  <psr>0.0</psr>
                  <increment>1.0</increment>
                  <upperBound>10.0</upperBound>
                  <lowerBound>-10.0</lowerBound>
                  <delay>0</delay>
                  <enabled>true</enabled>
                  <frozen>false</frozen>
                  <dlyPtr>0</dlyPtr>
                  <dlyVal>0.0</dlyVal>
                  <isTemplate>true</isTemplate>
                </excitatoryPrototype>
                <inhibitoryPrototype>
                  <learningRule class="org.simbrain.network.synapse_update_rules.StaticSynapseRule">
                    <clipped>false</clipped>
                  </learningRule>
                  <spikeResponder class="org.simbrain.network.synapse_update_rules.spikeresponders.JumpAndDecay" reference="../../targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/excitatoryPrototype/spikeResponder"/>
                  <id></id>
                  <strength>0.0</strength>
                  <psr>0.0</psr>
                  <increment>1.0</increment>
                  <upperBound>10.0</upperBound>
                  <lowerBound>-10.0</lowerBound>
                  <delay>0</delay>
                  <enabled>true</enabled>
                  <frozen>false</frozen>
                  <dlyPtr>0</dlyPtr>
                  <dlyVal>0.0</dlyVal>
                  <isTemplate>true</isTemplate>
                </inhibitoryPrototype>
                <displaySynapses>true</displaySynapses>
                <recurrent>false</recurrent>
                <inStatic>true</inStatic>
                <exStatic>false</exStatic>
                <useGroupLevelSettings>true</useGroupLevelSettings>
                <compressedMatrixRep>AAAAGQABAgME/////wABAgME/////wABAgME/////wABAgME/////wABAgMEvv9Bar8SKS+/GdFm
vyYfQ78ChB6/jDfJv62G0b/d2g3ATmbSv7cR2MAvl+rAYR8fwGBZvb918yvAHKr5v7fnUr8tFU+/
N/7yv4fpKr/JkKfASe9FwENwo8Ay6/6/tx8IwDZbyQ==</compressedMatrixRep>
                <useFullRepOnSave>false</useFullRepOnSave>
              </org.simbrain.network.groups.SynapseGroup>
            </outgoingSgs>
            <gridThreshold>10</gridThreshold>
            <betweenNeuronInterval>50</betweenNeuronInterval>
            <recordAsSpikes>false</recordAsSpikes>
            <recording>false</recording>
            <inputMode>false</inputMode>
            <inputIndex>0</inputIndex>
            <writeCounter>0</writeCounter>
            <subsamplingIndices>
              <int>4</int>
              <int>3</int>
              <int>0</int>
              <int>2</int>
              <int>1</int>
            </subsamplingIndices>
            <fileNum>0</fileNum>
          </org.simbrain.network.groups.NeuronGroup>
          <org.simbrain.network.groups.NeuronGroup reference="../org.simbrain.network.groups.NeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup"/>
          <org.simbrain.network.groups.NeuronGroup reference="../org.simbrain.network.groups.NeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup"/>
        </java.util.concurrent.CopyOnWriteArrayList>
      </neuronGroupList>
      <synapseGroupList class="java.util.concurrent.CopyOnWriteArrayList" serialization="custom">
        <java.util.concurrent.CopyOnWriteArrayList>
          <default/>
          <int>2</int>
          <org.simbrain.network.groups.SynapseGroup reference="../../../neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup"/>
          <org.simbrain.network.groups.SynapseGroup reference="../../../neuronGroupList/java.util.concurrent.CopyOnWriteArrayList/org.simbrain.network.groups.NeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup/targetNeuronGroup/outgoingSgs/org.simbrain.network.groups.SynapseGroup"/>
        </java.util.concurrent.CopyOnWriteArrayList>
      </synapseGroupList>
      <displayNeuronGroups>true</displayNeuronGroups>
      <numMembers>47</numMembers>
      <betweenLayerInterval>200</betweenLayerInterval>
      <trainingSet>
        <inputData>
          <double-array>
            <double>0.16</double>
            <double>0.1</double>
            <double>0.64</double>
            <double>0.85</double>
            <double>1.0</double>
          </double-array>
        </inputData>
        <targetData>
          <double-array>
            <double>0.0</double>
            <double>1.0</double>
          </double-array>
          <double-array>
            <double>0.0</double>
            <double>1.0</double>
          </double-array>
          <double-array>
            <double>0.0</double>
            <double>0.0</double>
          </double-array>
          <double-array>
            <double>0.0</double>
            <double>0.0</double>
          </double-array>
          <double-array>
            <double>0.0</double>
            <double>1.0</double>
          </double-array>
          <double-array>
            <double>1.0</double>
            <double>0.0</double>
          </double-array>
          <double-array>
            <double>1.0</double>
            <double>1.0</double>
          </double-array>
          <double-array>
            <double>1.0</double>
            <double>0.0</double>
          </double-array>
          <double-array>
            <double>1.0</double>
            <double>0.0</double>
          </double-array>
        </targetData>
        <percentValidation>0.25</percentValidation>
      </trainingSet>
    </org.simbrain.network.subnetworks.BackpropNetwork>
  </groupList>
  <textList/>
  <updateManager>
    <actionList>
      <org.simbrain.network.update__actions.BufferedUpdate>
        <network reference="../../../.."/>
      </org.simbrain.network.update__actions.BufferedUpdate>
      <org.simbrain.network.update__actions.UpdateGroup>
        <group class="org.simbrain.network.subnetworks.BackpropNetwork" reference="../../../../groupList/org.simbrain.network.subnetworks.BackpropNetwork"/>
      </org.simbrain.network.update__actions.UpdateGroup>
    </actionList>
    <network reference="../.."/>
  </updateManager>
  <time>0.0</time>
  <timeStep>0.1</timeStep>
  <timeType>DISCRETE</timeType>
  <prioritySortedNeuronList/>
  <priorityComparator>
    <outer-class reference="../.."/>
  </priorityComparator>
  <neuronIdGenerator>
    <rootName>Neuron</rootName>
    <index>13</index>
  </neuronIdGenerator>
  <synapseIdGenerator>
    <rootName>Synapse</rootName>
    <index>36</index>
  </synapseIdGenerator>
  <groupIdGenerator>
    <rootName>Group</rootName>
    <index>7</index>
  </groupIdGenerator>
  <fireUpdates>true</fireUpdates>
  <name>Network3</name>
</org.simbrain.network.core.Network>